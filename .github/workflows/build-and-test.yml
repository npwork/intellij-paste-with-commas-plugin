name: Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        java-version: [21]
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Cache IntelliJ Platform
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches/modules-2/files-2.1/com.jetbrains.intellij.idea
          .intellijPlatform
        key: ${{ runner.os }}-intellij-platform-${{ hashFiles('build.gradle.kts') }}
        restore-keys: |
          ${{ runner.os }}-intellij-platform-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Run Tests
      run: ./gradlew test --stacktrace --info
      
    - name: Build Plugin
      run: ./gradlew build --stacktrace
      
    - name: Verify Plugin
      run: ./gradlew verifyPlugin
      
    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-java-${{ matrix.java-version }}
        path: |
          build/reports/tests/
          build/test-results/
          
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: plugin-artifacts-java-${{ matrix.java-version }}
        path: |
          build/distributions/
          build/libs/
          
    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: build/test-results/test/TEST-*.xml
        check_name: "Test Results (Java ${{ matrix.java-version }})"
        comment_mode: create new
        
  build-compatibility:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        intellij-version: ['2024.2.5', '2024.3']
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-compat-${{ matrix.intellij-version }}-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-compat-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Test with IntelliJ ${{ matrix.intellij-version }}
      run: |
        # Temporarily modify build.gradle.kts to test different IntelliJ versions
        sed -i 's/create("IC", "[^"]*")/create("IC", "${{ matrix.intellij-version }}")/' build.gradle.kts
        ./gradlew test --stacktrace
        
    - name: Build with IntelliJ ${{ matrix.intellij-version }}
      run: ./gradlew build --stacktrace

  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-quality-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-quality-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Run Kotlin Lint Check
      run: ./gradlew ktlintCheck || true
      
    - name: Verify Plugin Configuration
      run: ./gradlew verifyPluginProjectConfiguration
      
    - name: Check Plugin Structure
      run: ./gradlew verifyPlugin
      
    - name: Generate Test Coverage Report
      run: ./gradlew jacocoTestReport || true
      
    - name: Upload Coverage Reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-reports
        path: build/reports/jacoco/

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      
    - name: Run Dependency Check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: 'paste-with-commas-plugin'
        path: '.'
        format: 'ALL'
        
    - name: Upload Dependency Check Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: dependency-check-report
        path: reports/